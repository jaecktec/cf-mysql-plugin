// Code generated by counterfeiter. DO NOT EDIT.
package cfpsqlfakes

import (
	"sync"

	"github.com/jaecktec/cf-psql-plugin/cfpsql"
)

type FakePortFinder struct {
	GetPortStub        func() int
	getPortMutex       sync.RWMutex
	getPortArgsForCall []struct{}
	getPortReturns     struct {
		result1 int
	}
	getPortReturnsOnCall map[int]struct {
		result1 int
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakePortFinder) GetPort() int {
	fake.getPortMutex.Lock()
	ret, specificReturn := fake.getPortReturnsOnCall[len(fake.getPortArgsForCall)]
	fake.getPortArgsForCall = append(fake.getPortArgsForCall, struct{}{})
	fake.recordInvocation("GetPort", []interface{}{})
	fake.getPortMutex.Unlock()
	if fake.GetPortStub != nil {
		return fake.GetPortStub()
	}
	if specificReturn {
		return ret.result1
	}
	return fake.getPortReturns.result1
}

func (fake *FakePortFinder) GetPortCallCount() int {
	fake.getPortMutex.RLock()
	defer fake.getPortMutex.RUnlock()
	return len(fake.getPortArgsForCall)
}

func (fake *FakePortFinder) GetPortReturns(result1 int) {
	fake.GetPortStub = nil
	fake.getPortReturns = struct {
		result1 int
	}{result1}
}

func (fake *FakePortFinder) GetPortReturnsOnCall(i int, result1 int) {
	fake.GetPortStub = nil
	if fake.getPortReturnsOnCall == nil {
		fake.getPortReturnsOnCall = make(map[int]struct {
			result1 int
		})
	}
	fake.getPortReturnsOnCall[i] = struct {
		result1 int
	}{result1}
}

func (fake *FakePortFinder) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.getPortMutex.RLock()
	defer fake.getPortMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakePortFinder) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ cfpsql.PortFinder = new(FakePortFinder)
